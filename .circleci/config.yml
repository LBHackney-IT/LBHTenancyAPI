version: 2
jobs:
  check:
    machine: 
      image: circleci/classic:201808-01 #used to push docker form 17 to 18 use 'machine: true' when this is no longer needed

    steps:
      - checkout
      - setup_remote_docker: 
         docker_layer_caching: true
      - run:
          name: Build projects
          command: docker-compose build --build-arg VERSION_SUFFIX=$CIRCLE_BUILD_NUM
      - run:
          name: Run tests
          command: docker-compose run -e UH_CONNECTION_STRING="Data Source=tcp:stubuniversalhousing;Initial Catalog=StubUH;Integrated Security=False;User ID=sa;Password=Rooty-Tooty" --rm lbhtenancyapitest dotnet test

  staging_release:
    machine: true
    steps:
      - checkout
      - run:
          name: Install AWS CLI
          command: pip install awscli --upgrade --user
      - run:
          name: Install jq
          command: |
            sudo apt-get update
            sudo apt-get install jq
      - run:
          name: Install ecs-deploy
          command: |
            curl https://raw.githubusercontent.com/silinternational/ecs-deploy/master/ecs-deploy | sudo tee /usr/bin/ecs-deploy
            sudo chmod +x /usr/bin/ecs-deploy
      - run:
          name: Login to ECR
          command: aws ecr get-login --region $AWS_REGION --no-include-email | sh
      - run:
          name: Build new application Docker image
          command: docker build --file LBHTenancyAPI/Dockerfile --tag hackney/apps/tenancy-api --build-arg VERSION_SUFFIX=$CIRCLE_BUILD_NUM .
      - run:
          name: Tag new image for staging release
          command: |
            docker tag hackney/apps/tenancy-api:latest $ECR_IMAGE_URL:$CIRCLE_SHA1
            docker tag hackney/apps/tenancy-api:latest $ECR_IMAGE_URL:latest
            docker tag hackney/apps/tenancy-api:latest $ECR_IMAGE_URL:staging
      - run:
          name: Release new image to ECR
          command: |
            docker push $ECR_IMAGE_URL:$CIRCLE_SHA1
            docker push $ECR_IMAGE_URL:latest
            docker push $ECR_IMAGE_URL:staging
      - run:
          name: Force new deployment
          command: ecs-deploy --region $AWS_REGION --cluster $ECS_STAGING_CLUSTER --service-name $ECS_STAGING_APP_NAME --image $ECR_IMAGE_URL:staging --timeout $ECS_DEPLOY_TIMEOUT

  production_release:
    machine: true
    steps:
      - checkout
      - run:
          name: Install AWS CLI
          command: pip install awscli --upgrade --user
      - run:
          name: Install jq
          command: |
            sudo apt-get update
            sudo apt-get install jq
      - run:
          name: Install ecs-deploy
          command: |
            curl https://raw.githubusercontent.com/silinternational/ecs-deploy/master/ecs-deploy | sudo tee /usr/bin/ecs-deploy
            sudo chmod +x /usr/bin/ecs-deploy
      - run:
          name: Login to ECR
          command: aws ecr get-login --region $AWS_REGION --no-include-email | sh
      - run:
          name: Build new application Docker image
          command: docker build --file LBHTenancyAPI/Dockerfile --tag hackney/apps/tenancy-api --build-arg VERSION_SUFFIX=$CIRCLE_BUILD_NUM . 
      - run:
          name: Tag new image for production release
          command: docker tag hackney/apps/tenancy-api:latest $ECR_IMAGE_URL:production
      - run:
          name: Release new image to ECR
          command: docker push $ECR_IMAGE_URL:production
      - run:
          name: Force new deployment
          command: ecs-deploy --region $AWS_REGION --cluster $ECS_PRODUCTION_CLUSTER --service-name $ECS_PRODUCTION_APP_NAME --image $ECR_IMAGE_URL:production --timeout $ECS_DEPLOY_TIMEOUT

workflows:
  version: 2
  continuous_delivery:
    jobs:
      - check
      - staging_release:
          requires:
            - check
          filters:
            branches:
              only: master
      - permit_production_release:
          type: approval
          requires:
            - staging_release
      - production_release:
          requires:
            - permit_production_release
